<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=PowerPoint.Slide>
<meta name=Generator content="Microsoft PowerPoint 9">

<script>
<!--
if( window.name != "PPTNts" )
  parent.location.href = "../JavaTwo.htm";
//-->
</script>
</head>

<body bgcolor=black text=white>

<table border=0 width="100%">
 <tr>
  <td width=5 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><font face="Times New Roman" size=3>Another benefit
  of implementing ColdFusion on top of J2EE platform is that we can offer
  customers more options for how they deploy their servers. So with ColdFusion
  MX, we will be introducing a new line of ColdFusion products called
  ColdFusion MX for J2EE Application Servers. These will let you build and
  deploy ColdFusion applications on other Java application servers as well,
  such as IBM WebSphere, Sun iPlanet or BEA WebLogic – in addition to JRun.</font><br>
  </td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><br>
  </td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><font face="Times New Roman" size=3>Thus, if you
  have an existing Java application server environment set up, you can add
  ColdFusion to it, and you can benefit from the rapid application development
  capabilities of ColdFusion while leveraging your existing infrastructure. In
  addition, you can reuse any of the assets you may have built in Java –
  wrappers for legacy applications, EJBs for back-end transactions, or
  JSPs/servlets that implement key functionality. Because ColdFusion is itself
  a Java application, you can integrate very closely with any of these assets,
  including sharing session information.</font><br>
  </td>
 </tr>
</table>

</body>

</html>
